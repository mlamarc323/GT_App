@using GT_App.Models
@model GT_App.Models.Hole

@{
    ViewBag.Title = "Create";
}

@{
    var session = new SessionObj();
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Hole</legend>
        @* Facility Dropdown / Label (from session)*@
        @{
            session.FacilityId = Convert.ToInt32(Session["FacilityId"]);
        }
        @if (session.FacilityId != 0)
        {
            @Html.LabelFor(model => model.FacilityId, @Session["FacilityId"])
            <div>FacilityId: @Session["FacilityId"] - @Session["FacilityName"]</div>
        }
        else
        {
            @Html.DropDownListFor(model => model.FacilityId, (IEnumerable<SelectListItem>)ViewBag.FacilityId)
        }
        
        <br/>

        @* Course Dropdown / Label (from session)*@
        @{
            session.CourseId = Convert.ToInt32(Session["CourseId"]);
        }

        @if (session.CourseId != 0)
        {
            @Html.LabelFor(model => model.CourseId, @Session["CourseId"])
            <div>FacilityId: @Session["CourseId"] - @Session["CourseName"]</div>
        }
        else
        {
            @Html.DropDownListFor(model => model.CourseId, (IEnumerable<SelectListItem>)ViewBag.CourseId)
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.Number)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Number)
            @Html.ValidationMessageFor(model => model.Number)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Yardage)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Yardage)
            @Html.ValidationMessageFor(model => model.Yardage)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Par)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Par)
            @Html.ValidationMessageFor(model => model.Par)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Handicap)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Handicap)
            @Html.ValidationMessageFor(model => model.Handicap)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
